name: build
on: [push]
jobs:
  test:
    name: test
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js 20.x
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'npm'
      - run: npm ci
      - name: Execute test
        run: |
          npm run build
          npm run ci
      - name: Publish coverage
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
  deployConoHa:
    name: Deploy to ConoHa
    runs-on: ubuntu-20.04
    needs: test
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js 20.x
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'npm'
      - run: npm ci
      - name: build
        run: npm run build
      - name: rsync to conoha
        uses: burnett01/rsync-deployments@5.2
        with:
          switches: -auz --delete --exclude-from=".rsyncignore"
          path: ./
          remote_path: ${{ secrets.CONOHA_DEPLOY_PATH }}
          remote_port: ${{ secrets.CONOHA_SSH_PORT }}
          remote_host: meigetsu.jp
          remote_user: ${{ secrets.CONOHA_USER }}
          remote_key: ${{ secrets.DEPLOYSSHKEY }}
  afterSetup:
    name: Preparing for run on server
    runs-on: ubuntu-20.04
    needs: deployConoHa
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: SSH and Run Command
        uses: appleboy/ssh-action@master
        with:
          host: meigetsu.jp
          username: ${{ secrets.CONOHA_USER }}
          key: ${{ secrets.DEPLOYSSHKEY }}
          port: ${{ secrets.CONOHA_SSH_PORT }}
          script: |
            cd ${{ secrets.CONOHA_DEPLOY_PATH }}
            Remove-Item -Recurse ./node_modules
            npm install
